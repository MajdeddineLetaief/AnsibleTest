--- #Full VPC functionnalities with 2 EC2 instances
- hosts: localhost
  connection: local
  remote_user: projectx
  become: yes
  gather_facts: no
  vars_files:
  - files/awscreds.yml
  tasks: 
  - name: Create VPC
    ec2_vpc_net:
      name: "{{ vpc_name }}"
      cidr_block: "{{ vpc_cidr_block }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      state: "present"
      tags:
        Name: ansibleVPC
    register: ansibleVPC
  - name: Display VPC ID 
    set_fact:
      vpc_id: "{{ ansibleVPC.vpc.id }}"

  - name: Create Public Subnet [AZ-1]
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "10.0.1.0/24"
      az: "{{ aws_region }}a"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "ansiblePuS1"
    register: my_public_subnet_az1
  - name: Set Public Subnet ID in variable [AZ-1]
    set_fact:
      public_subnet_az1_id: "{{ my_public_subnet_az1.subnet.id }}"

  - name: Create Public Subnet [AZ-2]
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "10.0.2.0/24"
      az: "{{ aws_region }}b"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "ansiblePuS2"
    register: my_public_subnet_az2
  - name: Set Public Subnet ID in variable [AZ-2]
    set_fact:
      public_subnet_az2_id: "{{ my_public_subnet_az2.subnet.id }}"

  - name: Create Private Subnet [AZ-1]
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "10.0.3.0/24"
      az: "{{ aws_region }}a"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "ansiblePrS1"
    register: my_private_subnet_az1
  - name: Set Private Subnet ID in variable [AZ-1]
    set_fact:
      private_subnet_az1_id: "{{ my_private_subnet_az1.subnet.id }}"

  - name: Create Private Subnet [AZ-2]
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "10.0.4.0/24"
      az: "{{ aws_region }}b"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "ansiblePrS2"
    register: my_private_subnet_az2
  - name: Set Private Subnet ID in variable [AZ-2]
    set_fact:
      private_subnet_az2_id: "{{ my_private_subnet_az2.subnet.id }}"

  - name: Create Internet Gateway for VPC
    ec2_vpc_igw:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      state: "present"
      tags:
        Name: "ansibleIG"
    register: my_vpc_igw
  - name: Set Internet Gateway ID in variable
    set_fact:
      igw_id: "{{ my_vpc_igw.gateway_id }}"

  - name: Set up public subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
        Name: "ansiblePuRT"
      subnets:
        - "{{ public_subnet_az1_id }}"
        - "{{ public_subnet_az2_id }}"
      routes:
        - dest: "0.0.0.0/0"
          gateway_id: "{{ igw_id }}"

  - name: Set up private subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
        Name: "ansiblePrRT"
      subnets:
        - "{{ private_subnet_az1_id }}"
        - "{{ private_subnet_az2_id }}"
      routes:
        - dest: "0.0.0.0/0"
  
  - name: Create and associate network ACL with az1 subnets"
    ec2_vpc_nacl:
      vpc_id: "{{ vpc_id }}"
      name: ansibleNACL1
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      subnets: 
        - "{{ public_subnet_az1_id }}"
        - "{{ private_subnet_az1_id }}"
      tags:
        Name: ansibleNACL1
      ingress: [
        [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
      ]
      egress: [
        [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
      ]
      state: "present"
   
  - name: Create and associate network ACL with az2 subnets"
    ec2_vpc_nacl:
      vpc_id: "{{ vpc_id }}"
      name: ansibleNACL2
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
        Name: ansibleNACL2
      subnets: 
        - "{{ public_subnet_az2_id }}"
        - "{{ private_subnet_az2_id }}"
      ingress: [
        [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
      ]
      egress: [
        [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
      ]
      state: "present"


  - name: Create first Security Group
    ec2_group:
      name: "Wide open"
      description: "Wide open"
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
        Name: ansibleSG
      rules:
        - proto: -1
          from_port: all
          to_port: all
          cidr_ip: "0.0.0.0/0"
    register: my_main_sg
  - name: Display SG ID
    set_fact:
      main_sg_id: "{{ my_main_sg.group_id }}"

  - name: Provision First EC2 instance
    ec2: 
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
      image: ami-66506c1c
      instance_type: t2.micro
      count: 1
      assign_public_ip: yes
      key_name: MLtestPK
      instance_tags:
        Name: ansibleInstance1newVPC
      vpc_subnet_id: "{{ public_subnet_az1_id }}"
      group_id: "{{ my_main_sg.group_id }}"
 
  - name: Provision Second EC2 instance 
    ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
      image: ami-66506c1c
      instance_type: t2.micro
      count: 1
      assign_public_ip: yes
      key_name: MLtestPK
      instance_tags:
        Name: ansibleInstance2newVPC
      vpc_subnet_id: "{{ public_subnet_az2_id }}"
      group_id: "{{ my_main_sg.group_id }}"
