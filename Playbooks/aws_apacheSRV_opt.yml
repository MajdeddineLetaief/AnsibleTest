--- # Ansible Playbook to configure static webserver and use it to create new template
- hosts: aws
  connection: ssh
  remote_user: ubuntu
  become: yes
  become_method: sudo
  gather_facts: yes
  tasks: 
  - name: Execute all installations
    apt: name={{ item }} state=latest
    with_items:
      - apache2
      - wget
    notify:
      - CopySiteFiles
      - RestartApache2
      - WaitForSite
      - TestSite
      - DisplayResults
  handlers:
  - name: CopySiteFiles
    copy: src=files/index.html dest=/var/www/html/index.html owner=root group=root mode=0655 backup=yes
  - name: RestartApache2
    service: name=apache2 state=restarted
  - name: WaitForSite
    wait_for: host=ec2-34-203-197-107.compute-1.amazonaws.com port=80 delay=20
  - name: TestSite
    shell: /usr/bin/wget http://localhost
    register: site_result
  - name: DisplayResults
    debug: var=site_result

- hosts: localhost
  connection: local 
  remote_user: projectx
  become: yes
  gather_facts: no 
  vars_files:
  - files/awscreds.yml
  tasks:
  - name: Take a snapshot backup of the website directory
    ec2_snapshot:
      aws_access_key: "{{ aws_id }}"
      aws_secret_key: "{{ aws_key }}"
      region: "{{ aws_region }}"
      instance_id: i-0160b8c8feee81fb6
      device_name: /dev/sdb
      description: Initial Playbook Static Site Deployement Backup
      wait: no 
    register: snapshot_results
    notify:
    - DisplaySnapshotResults
    - CreateNewAMITemplate
    - DisplayAMICreationResults
  handlers:
  - name: DisplaySnapshotResults
    debug: var=snapshot_results
  - name: CreateNewAMITemplate
    ec2_ami:
      aws_access_key: "{{ aws_id }}"
      aws_secret_key: "{{ aws_key}}"
      region: "{{ aws_region }}"
      instance_id: i-0160b8c8feee81fb6
      wait: no 
      name: myansible_amitemplate12
      tags: 
        Name: MyAnsible_AMITemplate12
    register: ami_results
  - name: DisplayAMICreationResults
    debug: var=ami_results
